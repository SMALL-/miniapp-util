{"version":3,"file":"miniapp-util.js","sources":["../src/index.js"],"sourcesContent":["import {Promise} from './promise.js';\r\nconst noop = function() {};\r\n\r\n/**\r\n * 转换称两位数\r\n * 0 => 00\r\n */\r\nfunction formatNumber(n) {\r\n    n = n.toString();\r\n    return n[1] ? n : '0' + n;\r\n}\r\n\r\n\r\n/**\r\n * [秒 =》 分钟]\r\n * 100 => 01:40\r\n */\r\nfunction secondToMinute(s) {\r\n    let m = Math.floor(s / 60);\r\n    s = s % 60;\r\n    return [formatNumber(m), formatNumber(s)].join(\":\");\r\n}\r\n\r\n\r\n/**\r\n * 格式化时间\r\n */\r\nexports.formatTime = function(date, fmt = \"yyyy/MM/dd hh:mm:ss\") {\r\n    if (!date) return \"\";\r\n    date = typeof date == \"number\" ? new Date(date) : date;\r\n    var o = {\r\n\r\n        \"M+\": date.getMonth() + 1, //月份\r\n        \"d+\": date.getDate(), //日\r\n        \"h+\": date.getHours(), //小时\r\n        \"m+\": date.getMinutes(), //分\r\n        \"s+\": date.getSeconds(), //秒\r\n\r\n    };\r\n    if (/(y+)/.test(fmt)) fmt = fmt.replace(RegExp.$1, (date.getFullYear() + \"\").substr(4 - RegExp.$1.length));\r\n\r\n    for (var k in o) {\r\n        if (new RegExp(\"(\" + k + \")\").test(fmt)) {\r\n            fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1) ?\r\n                (o[k]) :\r\n                ((\"00\" + o[k]).substr((\"\" + o[k]).length)));\r\n        }\r\n    }\r\n    return fmt;\r\n};\r\n\r\n/**\r\n * 人性话格式时间\r\n */\r\nexports.ctDate = function(date) {\r\n    if (!date) return \"\";\r\n    const now = Date.now();\r\n    let diff;\r\n    date = typeof date == \"number\" ? date : +(new Date(date));\r\n    diff = now - date;\r\n    switch (Math.floor(diff / 3600000 / 24)) {\r\n        case 0:\r\n            return \"今天\";\r\n        case 1:\r\n            return \"昨天\";\r\n        case 2:\r\n            return \"两天前\";\r\n        case 3:\r\n            return \"三天前\";\r\n        case 4:\r\n            return \"四天前\";\r\n        case 5:\r\n            return \"五天前\";\r\n        default:\r\n            return formatTime(date);\r\n    }\r\n\r\n};\r\n\r\n/**\r\n * 浅拷贝\r\n */\r\nconst assign = exports.assign = function() {\r\n    const args = [].slice.apply(arguments);\r\n    const target = args.shift();\r\n    const length = args.length;\r\n    let i = 0;\r\n    let k;\r\n\r\n    for (; i < length; i++) {\r\n\r\n        let copy = args[i];\r\n\r\n        for (k in copy) {\r\n\r\n            target[k] = copy[k];\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return target;\r\n\r\n};\r\n\r\n/**\r\n * 封装loadding\r\n */\r\nexports.loading = function(title = \"加载中\", duration = 10000, icon = \"loading\") {\r\n    wx.showToast({\r\n        title,\r\n        icon,\r\n        duration\r\n    });\r\n};\r\n\r\n/**\r\n * 封装hideLoading\r\n */\r\nexports.hideLoading = function() {\r\n    wx.hideToast();\r\n};\r\n\r\n/**\r\n * mode基类\r\n */\r\nfunction modal(options, showCancel = false) {\r\n    return new Promise((reslove, reject) => {\r\n\r\n        const SUCCESS = options.success || noop;\r\n        const FAIL = options.fail || noop;\r\n        options.success = function(res) {\r\n            SUCCESS(res);\r\n            if (res.confirm) {\r\n                reslove(true);\r\n            } else {\r\n                reslove(false);\r\n            }\r\n        };\r\n        options.fail = function(res) {\r\n            FAIL(res);\r\n            reject(res);\r\n        };\r\n        options.showCancel = showCancel;\r\n        wx.showModal(options);\r\n    });\r\n}\r\n\r\n/**\r\n * 判断model的\r\n * @param  {[type]} options [description]\r\n * @return {[type]}         [description]\r\n */\r\nfunction modalOptions (options) {\r\n  if (typeof options == \"string\") {\r\n      return {\r\n          title,\r\n          content: opt\r\n      };\r\n  }\r\n  return options;\r\n}\r\n\r\n/**\r\n * 弹出层\r\n */\r\nconst _alert = exports._alert = function(options, title = \"提示\") {\r\n    options = modalOptions(options);\r\n    return model(options);\r\n};\r\n\r\n/**\r\n * 对话框\r\n */\r\nconst _confirm = exports._confirm = function(options, title = \"提示\") {\r\n  options = modalOptions(options);\r\n  return modal(options,true);\r\n};\r\n\r\n\r\nexports.decodeHtml = function(domString) {\r\n    if (!domString) return \"\";\r\n\r\n    domString = typeof domString === \"function\" ? domString()  : domString.toString();\r\n\r\n    const REGX_HTML_DECODE = /&\\w+;|&#(\\d+);|<\\w+>/g;\r\n    const HTML_DECODE = {\r\n        \"&lt;\": \"<\",\r\n        \"&gt;\": \">\",\r\n        \"&amp;\": \"&\",\r\n        \"&nbsp;\": \" \",\r\n        \"&quot;\": \"\\\"\",\r\n        \"©\": \"\",\r\n        \"<br>\": \"\\n\",   //后端将\\n转成了<br>\r\n    };\r\n\r\n    return domString.replace(REGX_HTML_DECODE,function(m,$1){\r\n      return HTML_DECODE[m] ? HTML_DECODE[m] : m;\r\n    });\r\n\r\n};\r\n\r\n//Object => queryString\r\nexports.param = function(obj) {\r\n    var key, val,\r\n        arr = [];\r\n    for (key in obj) {\r\n\r\n        val = obj[key];\r\n        arr[arr.length] = key + \"=\" + val;\r\n\r\n    }\r\n    return arr.join(\"&\");\r\n};\r\n\r\n\r\n/**\r\n * 封装wx.request\r\n * 引入promise\r\n * 建议在app.js中引入request并且定义全局请求配置\r\n */\r\nfunction request(configuration) {\r\n\r\n    const DEFALUT_CONFIG = {\r\n        root: \"\",\r\n        url: \"\",\r\n        method: \"POST\",\r\n        header: {\r\n            \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\"\r\n        },\r\n        data: {},\r\n        success: noop,\r\n        fail: noop,\r\n        complete: noop,\r\n        resloveStatus: noop,\r\n        loading: false,\r\n    };\r\n\r\n    configuration = assign({},DEFALUT_CONFIG, configuration);\r\n\r\n    return function(requestParams) {\r\n\r\n        return new Promise(function(fulfill, reject) {\r\n\r\n                requestParams = assign({},configuration, requestParams);\r\n\r\n                if (requestParams.loading) {\r\n                    loading();\r\n                }\r\n\r\n                wx.request({\r\n                    /**\r\n                     * 每个项目的跟路径不一样，\r\n                     */\r\n                    url: requestParams.root + requestParams.url,\r\n                    method: requestParams.method,\r\n                    data: requestParams.data,\r\n                    header: requestParams.header,\r\n                    success({\r\n                        data\r\n                    }) {\r\n\r\n                        /**\r\n                         * 服务端通过code判断服务器超时/参数错误等\r\n                         */\r\n                        if (requestParams.resloveStatus(data)) {\r\n                            fulfill(data);\r\n                        } else {\r\n                            reject(data);\r\n                        }\r\n\r\n                    },\r\n                    fail(res) {\r\n                        /**\r\n                         * 可能是网络错误\r\n                         */\r\n                        reject(res);\r\n                    },\r\n                    complete() {\r\n                        requestParams.complete(res);\r\n                        hideLoading();\r\n                    }\r\n                });\r\n            })\r\n            .then(function(res) {\r\n                requestParams.success(res);\r\n                return res;\r\n            }, function(res) {\r\n                requestParams.fail(res);\r\n                throw new Error(\"request fail:\" + res);\r\n            });\r\n\r\n    };\r\n}\r\n\r\n/**\r\n * 配置获取用户信息的参数\r\n * @return {[type]}               [getUserInfo]\r\n */\r\nfunction configUserInfo(userInfo) {\r\n\r\n    const DETAULT_USERINFO = {\r\n        code: \"\",\r\n        data: {},\r\n        /**\r\n         * 把认证信息传到服务器登录\r\n         * @param  {[type]} userInfo [认证信息]\r\n         * @param  {[type]} code     [登录code]\r\n         * @return {[type]}          [promise]\r\n         */\r\n        requestLogin: function(userInfo, code) {\r\n            //必须返回一个promise\r\n            return {\r\n                then: noop\r\n            };\r\n        }\r\n    };\r\n\r\n    userInfo = assign({},DETAULT_USERINFO, userInfo);\r\n\r\n    /**\r\n     * 获取自己的用户信息\r\n     * @param  {Function} callback [获取信息之后的回调]\r\n     * @param  {[type]}   force    [是否强制从服务器上使用新的code拉取用户信息]\r\n     * @return {[type]}            [promise]\r\n     */\r\n    return function getUserInfo(callback = noop, force = false) {\r\n        return new Promise(function(reslove, reject) {\r\n            if (userInfo.code && !force) {\r\n                reslove(userInfo.code);\r\n                return;\r\n            }\r\n            wx.login({\r\n                success(res) {\r\n                    wx.code = res.code;\r\n                    reslove(res.code);\r\n                },\r\n                fail(res) {\r\n                    console.log(res);\r\n                    reject(res);\r\n                }\r\n            });\r\n        }).then(function(code) {\r\n            if (!force && userInfo.data) return userInfo.data;\r\n            return new Promise(function(reslove, reject) {\r\n                wx.getUserInfo({\r\n                    success(res) {\r\n                        reslove(res);\r\n                    },\r\n                    fail(res) {\r\n                        reject(res);\r\n                    }\r\n                });\r\n            });\r\n        }).then(\r\n            function(res) {\r\n                if (!force && userInfo.data) return userInfo.data;\r\n                return userInfo.requestLogin(res, userInfo.code);\r\n            },\r\n            function(res) {\r\n                console.log(res);\r\n                _alert(\"登录失败，请重新登录\")\r\n                    .then(res => {\r\n                        getUserInfo(callback, true);\r\n                    });\r\n                throw new Error(\"login fail:\" + res);\r\n            }\r\n        ).then(function(res) {\r\n            userInfo.data = res;\r\n            return callback(res) || res;\r\n        });\r\n    };\r\n}\r\n\r\n/**\r\n * 支付\r\n * @param  {[type]} payParams [description]\r\n * @return {[type]}           [description]\r\n */\r\nfunction payment(payParams) {\r\n    return new Promise(function(fulfill, reject) {\r\n        payParams.success = function(res) {\r\n            console.log(res);\r\n            fulfill(res);\r\n        };\r\n        payParams.fail = function(res) {\r\n            console.log(res);\r\n            reject(res);\r\n        };\r\n        console.log(payParams);\r\n        wx.requestPayment(payParams);\r\n    });\r\n}\r\n\r\n/**\r\n * 上传文件\r\n * @param  {[type]} opt [description]\r\n * @return {[type]}     [description]\r\n */\r\nfunction uploadFile(uploadFileConfig) {\r\n\r\n    const DEFAULT_UPLOAD_CONFIG = {\r\n\r\n        root: \"\",\r\n        defaultURL: \"\",\r\n        resloveStatus: noop,\r\n        requestParams: {\r\n            header: {},\r\n            name: \"\"\r\n        }\r\n\r\n    };\r\n\r\n    uploadFileConfig = assign({}, DEFAULT_UPLOAD_CONFIG, uploadFileConfig);\r\n\r\n    return function(options) {\r\n\r\n        return new Promise(function(fulfill, reject) {\r\n\r\n            options = assign({}, uploadFileConfig.requestParams, options);\r\n            options.url = options.url ? uploadFileConfig.root + options.url : uploadFileConfig.root + uploadFileConfig.defaultURL;\r\n\r\n            options.success = function(res) {\r\n                let fileData;\r\n                try {\r\n                    fileData = JSON.parse(res.data);\r\n                } catch (e) {\r\n                    reject(e);\r\n                }\r\n                if (uploadFileConfig.resloveStatus(fileData)) {\r\n                    fulfill(fileData);\r\n                } else {\r\n                    reject(fileData);\r\n                }\r\n            };\r\n\r\n            options.fail = function(res) {\r\n                console.log(res);\r\n                reject(res);\r\n            };\r\n\r\n            wx.uploadFile(options);\r\n        });\r\n\r\n    };\r\n}\r\n\r\nexports.pubsub = {\r\n\r\n  cache : {},\r\n\r\n  $on () {},\r\n  $emit () {}\r\n\r\n\r\n};\r\n"],"names":["modal","options","showCancel","Promise","reslove","reject","SUCCESS","success","noop","FAIL","fail","res","confirm","showModal","modalOptions","opt","exports","formatTime","date","fmt","Date","o","getMonth","getDate","getHours","getMinutes","getSeconds","test","replace","RegExp","$1","getFullYear","substr","length","k","ctDate","now","diff","Math","floor","assign","args","slice","apply","arguments","target","shift","i","copy","loading","title","duration","icon","showToast","hideLoading","hideToast","_alert","model","_confirm","decodeHtml","domString","toString","REGX_HTML_DECODE","HTML_DECODE","m","param","obj","key","val","arr","join","pubsub"],"mappings":"yNA8HA,QAASA,GAAMC,MAASC,iEACb,IAAIC,GAAQ,SAACC,EAASC,MAEnBC,GAAUL,EAAQM,SAAWC,EAC7BC,EAAOR,EAAQS,MAAQF,IACrBD,QAAU,SAASI,KACfA,KACJA,EAAIC,SACI,GAEA,MAGRF,KAAO,SAASC,KACfA,KACEA,MAEHT,WAAaA,KAClBW,UAAUZ,KASrB,QAASa,GAAcb,SACC,gBAAXA,wBAGMc,KAGVd,+iGA/JHO,EAAO,YA0BbQ,SAAQC,WAAa,SAASC,MAAMC,0DAAM,0BACjCD,EAAM,MAAO,KACI,gBAARA,GAAmB,GAAIE,MAAKF,GAAQA,KAC9CG,SAEMH,EAAKI,WAAa,OAClBJ,EAAKK,eACLL,EAAKM,gBACLN,EAAKO,kBACLP,EAAKQ,aAGX,QAAOC,KAAKR,KAAMA,EAAMA,EAAIS,QAAQC,OAAOC,IAAKZ,EAAKa,cAAgB,IAAIC,OAAO,EAAIH,OAAOC,GAAGG,cAE7F,GAAIC,KAAKb,GACN,GAAIQ,QAAO,IAAMK,EAAI,KAAKP,KAAKR,OACzBA,EAAIS,QAAQC,OAAOC,GAAyB,GAApBD,OAAOC,GAAGG,OACnCZ,EAAEa,IACD,KAAOb,EAAEa,IAAIF,QAAQ,GAAKX,EAAEa,IAAID,gBAGvCd,IAMXH,QAAQmB,OAAS,SAASjB,OACjBA,EAAM,MAAO,MACZkB,GAAMhB,KAAKgB,MACbC,kBACkB,gBAARnB,GAAmBA,GAAS,GAAIE,MAAKF,KAC5CkB,EAAMlB,EACLoB,KAAKC,MAAMF,EAAO,KAAU,SAC3B,SACM,SACN,SACM,SACN,SACM,UACN,SACM,UACN,SACM,UACN,SACM,oBAEApB,YAAWC,IAQfF,SAAQwB,OAAS,kBACtBC,MAAUC,MAAMC,MAAMC,WACtBC,EAASJ,EAAKK,QACdb,EAASQ,EAAKR,OAChBc,EAAI,EACJb,SAEGa,EAAId,EAAQc,IAAK,IAEhBC,GAAOP,EAAKM,OAEXb,IAAKc,KAECd,GAAKc,EAAKd,SAMlBW,GAOX7B,SAAQiC,QAAU,cAASC,0DAAQ,MAAOC,yDAAW,IAAOC,yDAAO,aAC5DC,wCAUPrC,QAAQsC,YAAc,cACfC,YA8CQvC,SAAQwC,OAAS,SAASvD,0DAAiB,cAC5Ca,EAAab,GAChBwD,MAAMxD,IAMAe,QAAQ0C,SAAW,SAASzD,0DAAiB,cAClDa,EAAab,GAChBD,EAAMC,GAAQ,GAIvBe,SAAQ2C,WAAa,SAASC,OACrBA,EAAW,MAAO,KAEU,kBAAdA,GAA2BA,IAAeA,EAAUC,cAEjEC,GAAmB,wBACnBC,UACM,WACA,YACC,aACC,aACA,QACL,UACG,YAGLH,GAAUhC,QAAQkC,EAAiB,SAASE,EAAElC,SAC5CiC,GAAYC,GAAKD,EAAYC,GAAKA,KAM/ChD,QAAQiD,MAAQ,SAASC,MACjBC,GAAKC,EACLC,SACCF,IAAOD,KAEFA,EAAIC,KACNE,EAAIpC,QAAUkC,EAAM,IAAMC,QAG3BC,GAAIC,KAAK,MAIpBtD,QAuOQuD"}